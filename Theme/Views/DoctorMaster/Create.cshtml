@model Theme.Models.DoctorClass

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout1.cshtml";
    if (Session["Email"] != null)
    {
        ViewBag.id = @Session["Id"].ToString();
        ViewBag.EntryBy = @Session["Name"].ToString();
    }

}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {

        $("#EntryDateTime").hide();
        $("#EntryBy").hide();
        $("#HospitalId").hide();
        $("#eb").hide();
        $("#hi").hide();


    });
</script>
<h2>Create</h2>

@using (Html.BeginForm("formsubmit", "DoctorMasterController", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>DoctorClass</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-input">
                    @Html.EditorFor(model => model.EmployeeCode, new { htmlAttributes = new { @class = "form-input" } })
                    @Html.ValidationMessageFor(model => model.EmployeeCode, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-sm-1"></div>
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(model => model.DoctorName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-input">
                    @Html.EditorFor(model => model.DoctorName, new { htmlAttributes = new { @class = "form-input" } })
                    @Html.ValidationMessageFor(model => model.DoctorName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-sm-1"></div>
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(model => model.DoctorSpecialization, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-input">
                    @Html.EditorFor(model => model.DoctorSpecialization, new { htmlAttributes = new { @class = "form-input" } })
                    @Html.ValidationMessageFor(model => model.DoctorSpecialization, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(model => model.DoctorDegree, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-input">
                    @Html.EditorFor(model => model.DoctorDegree, new { htmlAttributes = new { @class = "form-input" } })
                    @Html.ValidationMessageFor(model => model.DoctorDegree, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-sm-1"></div>
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(model => model.DoctorPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-input">
                    @Html.EditorFor(model => model.DoctorPhone, new { htmlAttributes = new { @class = "form-input" } })
                    @Html.ValidationMessageFor(model => model.DoctorPhone, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-sm-1"></div>
        <div class="col-sm-3">

            <div class="form-group">
                @Html.LabelFor(model => model.DoctorEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-input">
                    @Html.EditorFor(model => model.DoctorEmail, new { htmlAttributes = new { @class = "form-input" } })
                    @Html.ValidationMessageFor(model => model.DoctorEmail, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(model => model.DoctorCity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-input">
                    @Html.EditorFor(model => model.DoctorCity, new { htmlAttributes = new { @class = "form-input" } })
                    @Html.ValidationMessageFor(model => model.DoctorCity, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-sm-1"></div>
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(model => model.DoctorState, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-input">
                    @Html.EditorFor(model => model.DoctorState, new { htmlAttributes = new { @class = "form-input" } })
                    @Html.ValidationMessageFor(model => model.DoctorState, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-sm-1"></div>
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(model => model.DoctorCountry, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-input">
                    @Html.EditorFor(model => model.DoctorCountry, new { htmlAttributes = new { @class = "form-input" } })
                    @Html.ValidationMessageFor(model => model.DoctorCountry, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-input">
                        <label class="display-block">IsActive</label><br>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="IsActive" id="product_active" value="1" checked>
                            <label class="form-check-label" for="product_active">
                                Active
                            </label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="IsActive" id="product_inactive" value="0">
                            <label class="form-check-label" for="product_inactive">
                                Inactive
                            </label>
                        </div>
                   
                </div>
            </div>
        </div>
        <div class="col-sm-1"></div>
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-2" })
              
                    <div class="form-check-label">
                        <select name="RoleName" class="field">
                            @for (int i1 = 0; i1 < ViewBag.Data.Count; i1++)
                            {
                                <Option>
                                    @for (int j = 0; j < ViewBag.Data[0].Count; j++)
                                    {
                                        @ViewBag.Data[i1][j]
                                    }
                                </Option>
                            }
                        </select>

                        @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
                        @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                    </div>
               
            </div>
        </div>
        <div class="col-sm-1"></div>
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(model => model.DoctorAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-input">
                    @Html.EditorFor(model => model.DoctorAddress, new { htmlAttributes = new { @class = "form-input" } })
                    @Html.ValidationMessageFor(model => model.DoctorAddress, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>


    <div class="form-group">
        <div class="form-input">
            @*@Html.EditorFor(model => model.EntryBy, new { htmlAttributes = new { @class = "form-input" } })
                @Html.ValidationMessageFor(model => model.EntryBy, "", new { @class = "text-danger" })*@
            @*@Html.EditorFor(model => model.EntryBy, new { htmlAttributes = new { @class = "form-input" } })
                @Html.ValidationMessageFor(model => model.EntryBy, "", new { @class = "text-danger" })*@
            <div class="form-input">
                <label id="eb">Entry By</label>
                @*<div class="form-input">
                        @{
                            if (Session["Email"] != null)
                            {
                                @Session["Name"].ToString()
                            }

                        }
                    </div>*@
                @Html.TextBox("EntryBy", (string)ViewBag.EntryBy, new { @class = "form-input" })
            </div>


        </div>
    </div>

    <div class="form-group">
        <div class="form-input">
            <div class="form-input">
                <label id="hi">Hospital Id</label>
                @*<div class="form-input"name="Id">
                    @{
                        if (Session["Email"] != null)
                        {
                            @Session["Id"].ToString()
                        }

                    }
                </div>*@
                @Html.TextBox("HospitalId", (string)ViewBag.id, new { @class = "form-input" })
            </div>
        </div>
    </div>




    <div class="form-group">
        <div class="col-md-offset-2 form-input">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "DoctorList", "DoctorMaster")
</div>
